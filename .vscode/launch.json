{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Текущий файл",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            // "program": "hyper_etable/etable.py",
            "console": "integratedTerminal",
            "justMyCode": false
        },
        {
            "name": " PyTest Текущий файл",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "${file}"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1",
                "DOWNWARD_TOTAL_PUSHES": "5000000000000"
            },
            "justMyCode": false
        },
        {
            "name": "PyTest Current File",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/${fileBasename}"
            ],
            "console": "integratedTerminal",
        },
        {
            "name": " PyTest anothe test",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/test_static_xlsx.py::test_simpleinc_and_3_watch"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1"
                // "HYPERC_LOGLEVEL": "DEBUG"
            },
            "justMyCode": false
        },
        {
            "name": " PyTest Fast test",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/test_fast.py::test_fast_open"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "error",
            },
            "justMyCode": false
        },
        {
            "name": " PyTest Fast test wo precalc",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/test_fast.py::test_fast_wo_precalc"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1"
            },
            "justMyCode": false
        },
        {
            "name": " PyTest dump",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/test_dump.py::test_dump"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1"
            },
            "justMyCode": false
        },
        {
            "name": " PyTest cycle",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/test_dump.py::test_cycle"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1"
            },
            "justMyCode": false
        },
        {
            "name": " PyTest header_test",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "tests/test_dump.py::test_header"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1",
                "HYPERC_STORE_SAS": "1"
            },
            "justMyCode": false
        },
        {
            "name": " PyTest dentist",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "-o",
                "log_cli=true",
                "tests/test_dump.py::test_dentist"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1",
                "DOWNWARD_TOTAL_PUSHES": "500000000"
            },
            "justMyCode": false
        },
        {
            "name": " new row",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "-o",
                "log_cli=true",
                "tests/add_row/test_add_row.py::test_add_row"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_NEW_OBJECTS": "5",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1",
                "DOWNWARD_TOTAL_PUSHES": "5000000000000"
            },
            "justMyCode": false
        },
        {
            "name": " pallet",
            "type": "python",
            "request": "launch",
            "module": "pytest",
            "args": [
                "-s",
                "-o",
                "log_cli=true",
                "tests/test_pallet_simple.py::test_cycled"
            ],
            "console": "integratedTerminal",
            "env": {
                "PYTHON": "pypy3",
                "HYPERC_SEARCH_CONFIG": "lmcount_alt5",
                "HYPERC_SPLIT_OFF": "1",
                "HYPERC_SOLVER_MAX_TIME": "999900",
                "HYPERC_MAX_PROC": "1",
                "HYPERC_USE_CACHE": "0",
                "HYPERC_TEMPDIR": "./tmp",
                "HYPERC_DONT_REMOVE_ACTIONS": "1",
                "HYPERC_IGNORE_EQ_BRANCH": "1",
                "HYPERC_LOGLEVEL": "info",
                "HYPERC_LIN_COUNT": "20",
                "HYPERC_FORCE_LIN_COUNT": "1",
                "DOWNWARD_TOTAL_PUSHES": "5000000000000"
            },
            "justMyCode": false
        }
    ]
}